generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---------------- ENUMS ----------------
enum Role {
  ENTREPRENEUR
  INVESTOR
}

enum DealStatus {
  REVIEWING
  INTERESTED
  SHORTLISTED
  DECLINED
}

// ---------------- MODELS ----------------
model User {
  id         String    @id @default(uuid())
  name       String
  email      String    @unique
  role       Role
  createdAt  DateTime  @default(now())
  profileComplete Boolean   @default(false)
  bio        String?        // short preview for feed
  location   String?
  profilePic String?        // core (frequently shown)
  phoneno    String? @unique
  

  // Rare fields -> throw here
  metadata   Json?          // e.g., DOB, gender, address, socials

  // Relations
  startups         Startup[]
  dealsAsInvestor  Deal[]    @relation("InvestorDeals")
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  events           Event[]   @relation("UserEvents")
}

model Startup {
  id             String   @id @default(uuid())
  name           String
  industry       String
  fundingNeeded  Int
  createdAt      DateTime @default(now())

  // Core media

  pitchThumbNail   String?
  pitchLogo String?

  // Rare shit like tags, team size, website
  description String
  metadata       Json?

  // Relations
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  deals     Deal[]
}

model Deal {
  id         String     @id @default(uuid())
  status     DealStatus @default(REVIEWING)
  notes      String?
  createdAt  DateTime   @default(now())

  // Relations
  startup    Startup    @relation(fields: [startupId], references: [id])
  startupId  String
  investor   User       @relation("InvestorDeals", fields: [investorId], references: [id])
  investorId String
  messages   Message[]
}

model Message {
  id        String   @id @default(uuid())
  content   String
  sentAt    DateTime @default(now())

  // Relations
  deal       Deal @relation(fields: [dealId], references: [id])
  dealId     String
  sender     User @relation("SentMessages", fields: [senderId], references: [id])
  senderId   String
  receiver   User @relation("ReceivedMessages", fields: [receiverId], references: [id])
  receiverId String
}

model Event {
  id          String   @id @default(uuid())
  title       String
  eventDate   DateTime
  createdAt   DateTime @default(now())

  // Optional stuff -> not queried every time
  description String?
  metadata    Json?

  // Relations
  createdBy   User @relation("UserEvents", fields: [createdById], references: [id])
  createdById String
}
